(window.webpackJsonp=window.webpackJsonp||[]).push([[174],{634:function(a,t,e){"use strict";e.r(t);var s=e(3),r=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[a._v("#")]),a._v(" 索引")]),a._v(" "),t("h3",{attrs:{id:"创建索引的注意点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建索引的注意点"}},[a._v("#")]),a._v(" 创建索引的注意点")]),a._v(" "),t("ol",[t("li",[a._v("索引需要建在查询应用频繁的字段\neg： where、order by、join on")]),a._v(" "),t("li",[a._v("索引个数需要适量\n索引需要占据磁盘空间，索引越多，磁盘空间占用越大")]),a._v(" "),t("li",[a._v("创建索引时，字段需要具有区分度高、更新频率低的特点")]),a._v(" "),t("li",[a._v("组合索引时，需要按照区分度高排序，高区分度的字段放靠左边，并且满足最左前缀原则")])]),a._v(" "),t("h3",{attrs:{id:"普通索引和唯一索引关于性能方面选择"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#普通索引和唯一索引关于性能方面选择"}},[a._v("#")]),a._v(" 普通索引和唯一索引关于性能方面选择")]),a._v(" "),t("p",[a._v("假设设计一个市民系统，用户中包含身份证字段，该字段由于比较长，不适合建立主键索引，同时为了加速检索效率，适合建立非主键索引；对于非主键索引查询：")]),a._v(" "),t("ul",[t("li",[a._v("普通索引： 在查询到满足条件的数据后，仍需进行继续查找，找到找出所有满足条件的数据")]),a._v(" "),t("li",[a._v("唯一索引： 在查询到满足条件的数据后，直接返回")])]),a._v(" "),t("p",[a._v("两者性能上没有太大区别，唯一索引的性能会更高一些（基本可以忽略不计）；普通索引由于已经将页从磁盘读到内存并且同类数据存储在同一页的概率极高，因此从内存页再次查询效率非常高")]),a._v(" "),t("p",[a._v("对于非主键索引更新：")]),a._v(" "),t("p",[a._v("--- tip\n"),t("strong",[a._v("Change Buffer:")])]),a._v(" "),t("p",[a._v("当更新一个数据页时")]),a._v(" "),t("ul",[t("li",[a._v("数据页如果在内存中：直接更新，稍后会将该页数据刷入到磁盘")]),a._v(" "),t("li",[a._v("数据页不在内存中：在不影响数据一致性前提下，InooDB 会将这些更新操作缓存在 change buffer 中，这样就不需要从磁盘中读入这个数据页了；下次\n在读取时候，将数据加载到内存中，然后执行 change buffer 修改，将修改结果返回给用户")])]),a._v(" "),t("p",[t("strong",[a._v("使用场景")])]),a._v(" "),t("ul",[t("li",[a._v("对于写多读少，可以使用 change buffer 提高效率")]),a._v(" "),t("li",[a._v("对于写后读，由于在写change buffer 后需要立马读磁盘页，会增加 change buffer 的维护代价")])]),a._v(" "),t("hr"),a._v(" "),t("ul",[t("li",[a._v("普通索引： 可以使用到 change buffer")]),a._v(" "),t("li",[a._v("唯一索引： 所有的更新操作都要先判断这个操作是否违反唯一性约束；需要将索引页读到内存中才能进行判断，此时直接修改内存对比 change buffer 会更快，因此不会用到 change buffer。")])]),a._v(" "),t("p",[a._v("由于普通索引可以使用到 change buffer，因此普通索引的更新性能会更高一些")]),a._v(" "),t("blockquote",[t("p",[a._v("总结： 开发中，尽量推荐使用普通索引")])]),a._v(" "),t("h3",{attrs:{id:"字符串字段加索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串字段加索引"}},[a._v("#")]),a._v(" 字符串字段加索引")]),a._v(" "),t("p",[a._v("默认情况下，给字符串字段加索引，索引将作用于整个字符串；由于索引需要占用空间，如果字符串字段长度较长，索引会占用大量空间，因此不建议对整个字符串字段加索引，而是对字符串字段加前缀加索引。")]),a._v(" "),t("p",[a._v("给数据表 字符串字段加前缀索引的语法如下：")]),a._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("alter")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("table")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("user")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("add")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("index")]),a._v(" email_idx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("email"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("上述字段中，email 字段的前 8 个字符作为索引；")])])}),[],!1,null,null,null);t.default=r.exports}}]);