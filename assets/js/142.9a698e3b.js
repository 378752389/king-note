(window.webpackJsonp=window.webpackJsonp||[]).push([[142],{599:function(o,r,e){"use strict";e.r(r);var c=e(3),s=Object(c.a)({},(function(){var o=this,r=o._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":o.$parent.slotKey}},[r("h2",{attrs:{id:"var-run-docker-sock文件作用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#var-run-docker-sock文件作用"}},[o._v("#")]),o._v(" "),r("code",[o._v("/var/run/docker.sock")]),o._v("文件作用")]),o._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"title"}),r("p",[o._v("首先docker是基于cs架构的，我们shell中输入的命令，最终会被 Docker daemon解析并执行，默认情况下，Docker daemon监听的套接字为 "),r("code",[o._v("/var/run/docker.sock")]),o._v("，我们可以通过如下命令进行查看和配置："),r("code",[o._v("/usr/lib/systemd/system/docker.socket")]),o._v("；"),r("code",[o._v("/var/run")]),o._v("是"),r("code",[o._v("/run")]),o._v("的软连接")])]),r("p",[r("img",{attrs:{src:"https://raw.githubusercontent.com/378752389/image-bed/main/king-note/docker.sock%E7%9A%84%E8%BD%AF%E8%BF%9E%E6%8E%A5%E9%85%8D%E7%BD%AE%E4%BD%8D%E7%BD%AE.png",alt:"docker.sock文件配置位置"}})]),o._v(" "),r("p",[o._v("有时候我们的容器需要和"),r("code",[o._v("Docker daemon")]),o._v("进行通信，比如使用 portainer 进行容器管理，此时我们是通过浏览器操作和"),r("code",[o._v("portainer")]),o._v("容器进行通信的，而"),r("code",[o._v("portainer")]),o._v("容器则通过 "),r("code",[o._v("/var/run/docker.sock")]),o._v("和 "),r("code",[o._v("Docker daemon")]),o._v("进行通信， 最终，命令被 "),r("code",[o._v("Docker daemon")]),o._v("所执行。")]),o._v(" "),r("h2",{attrs:{id:"cgroup"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cgroup"}},[o._v("#")]),o._v(" cgroup")]),o._v(" "),r("p",[o._v("linux系统对进程资源限额配置，目录位置为"),r("code",[o._v("/sys/fs/cgroup/")])]),o._v(" "),r("ul",[r("li",[o._v("cpu: "),r("code",[o._v("/sys/fs/cgroup/cpu")])]),o._v(" "),r("li",[o._v("memory: "),r("code",[o._v("/sys/fs/cgroup/memory")])]),o._v(" "),r("li",[o._v("block io: "),r("code",[o._v("/sys/fs/cgroup/blkio")])])])])}),[],!1,null,null,null);r.default=s.exports}}]);