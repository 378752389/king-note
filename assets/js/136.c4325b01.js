(window.webpackJsonp=window.webpackJsonp||[]).push([[136],{594:function(s,e,a){"use strict";a.r(e);var t=a(3),r=Object(t.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"直连docker后台"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#直连docker后台"}},[s._v("#")]),s._v(" 直连docker后台")]),s._v(" "),e("p",[s._v("centos7下，docker 启动文件归于systemd管理，修改配置文件"),e("code",[s._v("/usr/lib/systemd/system/docker.service")]),s._v(", 在ExecStart末尾添加如下内容，允许客户端\n远程连接docker的2375端口。")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ExecStart")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/bin/dockerd "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-H")]),s._v(" fd:// "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--containerd")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/run/containerd/containerd.sock "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-H")]),s._v(" tcp://0.0.0.0:2375\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("重启docker")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("systemctl daemon-reload\nsystemctl restart "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("使用docker客户端远程连接docker")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-H")]),s._v(" tcp://192.168.1.128:2375 info\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"通过tls方式连接docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#通过tls方式连接docker"}},[s._v("#")]),s._v(" 通过tls方式连接docker")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://docs.docker.com/engine/security/protect-access/",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考官方文档"),e("OutboundLink")],1)]),s._v(" "),e("p",[s._v("我们知道，直连方式非常不安全，任何人知道ip都可以连接到docker daemon，所以我们需要通过 tls 保护 docker daemon socket")]),s._v(" "),e("p",[s._v("执行下面脚本生成证书")]),s._v(" "),e("h3",{attrs:{id:"服务端配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#服务端配置"}},[s._v("#")]),s._v(" 服务端配置")]),s._v(" "),e("p",[s._v("生成docker tls 证书脚本")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" docker-tls-generate.sh "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'EOF\'\n#!/bin/bash\n\nHOST=$(hostname)\n\nhosts="DNS:$HOST,IP:192.168.1.128,IP:127.0.0.1"\n\n# 创建 ca 私钥\nopenssl genrsa -out ca-key.pem 4096\n# 创建 ca 自签名证书\nopenssl req -new -x509 -days 365 -key ca-key.pem -sha256 -out ca.pem -subj "/C=Cn/ST=GD/L=SZ/O=Ltd/OU=development/CN=CA for Docker"\n# 创建 server 私钥\nopenssl genrsa -out server-key.pem 4096\n# 创建 server 证书请求文件\nopenssl req -subj "/CN=$HOST" -sha256 -new -key server-key.pem -out server.csr\n\n# x509v3 扩展配置， 声明该证书用于服务端认证和服务端证书绑定的域名或IP，在非指定域名或IP服务器上安装该证书无效，会认证失败\necho subjectAltName = $hosts >> extfile-server.cnf\necho extendedKeyUsage = serverAuth >> extfile-server.cnf\n\n# 创建 server 证书， 用 ca 证书对该证书签名\nopenssl x509 -req -days 365 -sha256 -in server.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out server-cert.pem -extfile extfile-server.cnf\n\n# 创建docker 客户端私钥  \nopenssl genrsa -out key.pem 4096\n\n# 创建docker 客户端 证书请求文件\nopenssl req -subj \'/CN=client\' -new -key key.pem -out client.csr\n\n# x509v3 扩展配置， 申明创建该证书用于客户端认证\necho extendedKeyUsage = clientAuth > extfile-client.cnf\n\n# 生成客户端证书\nopenssl x509 -req -days 365 -sha256 -in client.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out cert.pem -extfile extfile-client.cnf\n\nEOF')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br")])]),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x docker-tls-generate.sh\n\n./docker-tls-generate.sh\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"title"}),e("p",[s._v("docker官方文档推荐使用 $HOST 主机名作为 服务端证书的CN （"),e("code",[s._v("Common Name")]),s._v("）, 实测下来不用服务器名做 CN 也是可以的。")])]),e("p",[s._v("修改docker启动文件，指定 docker 启动时开始 tls 连接， 并且需要指定服务端证书文件，包括 "),e("code",[s._v("ca.pem、server-cert.pem、server-key.pem")]),s._v("；\ncentos7下，启动文件归于systemd管理，修改配置文件"),e("code",[s._v("/usr/lib/systemd/system/docker.service")]),s._v(", 将ExecStart修改为如下内容：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ExecStart")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/bin/dockerd "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-H")]),s._v(" fd:// "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--containerd")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/run/containerd/containerd.sock "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--tlsverify")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--tlscacert")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/root/docker-tls/ca.pem "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--tlscert")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/root/docker-tls/server-cert.pem "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--tlskey")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/root/docker-tls/server-key.pem "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-H")]),s._v(" tcp://192.168.1.128:2376\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/378752389/image-bed/main/king-note/docker%E5%BC%80%E5%90%AFtls%E4%BF%AE%E6%94%B9systemd%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.png",alt:"docker开启tls修改systemd配置文件"}})]),s._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"title"}),e("p",[s._v("/root/docker-tls/ 修改为证书存在的目录下")])]),e("p",[s._v("重启 docker")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("systemctl daemon-reload\nsystemctl restart "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("使用 客户端命令测试 tls 是否配置成功")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--tlsverify")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--tlscacert")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/root/docker-tls/ca.pem "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--tlscert")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/root/docker-tls/cert.pem "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--tlskey")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/root/docker-tls/key.pem "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-H")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.128:2376 version\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/378752389/image-bed/main/king-note/docker%E5%BC%80%E5%90%AFtls%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%AD%A3%E5%B8%B8%E8%BF%94%E5%9B%9E%E7%BB%93%E6%9E%9C.png",alt:"docker远程tls连接服务器返回正常结果"}})]),s._v(" "),e("p",[s._v("如果输出正常，则说明服务端配置成功了")]),s._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"title"}),e("p",[s._v("docker 默认端口监听在 2375上， docker tls 默认监听在 2376上。")]),s._v(" "),e("p",[s._v("docker 默认是不开放对外监听的，只能通过本地 sock 监听")])]),e("details",{staticClass:"custom-block details"},[e("summary",[s._v("cat创建文件小插曲")]),s._v(" "),e("p",[s._v("运行下面命令创建 newfile 文件")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" newfile "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF\nthis is newfile\nmy name is "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$name")]),s._v("\nEOF")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("cat 查看 发现 $name 变量消失不见了\n"),e("img",{attrs:{src:"https://raw.githubusercontent.com/378752389/image-bed/main/king-note/cat%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6%E5%90%8E%E5%8F%98%E9%87%8F%E5%BC%95%E7%94%A8%E6%B6%88%E5%A4%B1%E9%97%AE%E9%A2%98.png",alt:"cat创建文件后变量引用消失问题"}})]),s._v(" "),e("p",[s._v("原因是我们没有对变量赋值，然后参数被扩展了，解决办法是用单引号把EOF文件结束符引起来，就可以抑制变量扩展。")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" newfile "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'EOF'\nthis is newfile\nmy name is $name\nEOF")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])])]),s._v(" "),e("h3",{attrs:{id:"docker-客户端配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-客户端配置"}},[s._v("#")]),s._v(" docker 客户端配置")]),s._v(" "),e("p",[s._v("拷贝 "),e("code",[s._v("ca.pem、key.pem、cert.pem")]),s._v(" 三个文件， 用于客户端连接, 将其存放在指定目录下。")]),s._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"title"}),e("p",[s._v("idea 插件中指定证书目录中必须存在这三个文件，并且必须同名，否则docker插件识别不到")])]),e("p",[s._v("在idea的插件市场中安装docker插件")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/378752389/image-bed/main/king-note/idea%E6%8F%92%E4%BB%B6%E5%B8%82%E5%9C%BA%E6%90%9C%E7%B4%A2%E5%AE%89%E8%A3%85docker%E6%8F%92%E4%BB%B6.png",alt:"idea插件市场安装docker插件"}})]),s._v(" "),e("p",[s._v("在idea打开插件编辑配置界面")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/378752389/image-bed/main/king-note/idea%E5%BC%80%E5%90%AFdocker%E7%BC%96%E8%BE%91%E9%85%8D%E7%BD%AE.png",alt:"idea开启docker编辑配置"}})]),s._v(" "),e("p",[s._v("配置插件")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/378752389/image-bed/main/king-note/idea%E4%B8%ADdocker%E6%8F%92%E4%BB%B6%E5%90%AF%E5%8A%A8%E9%85%8D%E7%BD%AE.png",alt:"idea中docker插件启动配置"}})]),s._v(" "),e("ol",[e("li",[s._v("添加docker配置项")]),s._v(" "),e("li",[s._v("指定从dockerfile中构建镜像文件")]),s._v(" "),e("li",[s._v("指定docker host 远程连接配置")]),s._v(" "),e("li",[s._v("配置dockerfile文件所在位置，构建上下文和构建镜像的名称和标签")])]),s._v(" "),e("p",[s._v("其中 dockerfile 远程连接配置如下")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/378752389/image-bed/main/king-note/idea%E4%B8%ADdocker%E6%8F%92%E4%BB%B6%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E9%85%8D%E7%BD%AE.png",alt:"idea中docker插件远程连接配置"}})]),s._v(" "),e("ol",[e("li",[s._v("指定远程连接地址，此处使用 https")]),s._v(" "),e("li",[s._v("指定证书存放目录，docker插件会自动读取证书")])]),s._v(" "),e("p",[s._v("最后，只需像启动idea项目一样启动插件集合自动编译构建镜像到服务后台了。")])])}),[],!1,null,null,null);e.default=r.exports}}]);